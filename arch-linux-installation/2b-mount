#!/bin/bash

#$1 = boot partition, "$2" = system partition, $3 = mounted folder
#example:
#./2-create-subvols-and-mount.sh /dev/sda1 /dev/sda3 /mnt /@ /var/@main

if [[ $EUID -ne 0 ]]; then
	echo "This script must be executed as SUDO or ROOT"
	exit 1
fi

if [[ -z "$1" ]] || [[ -z "$2" ]] || [[ -z "$3" ]] || [[ -z "$4" ]] || [[ -z "$5" ]]; then
	echo "This script must be called passing the following arguments:"
	echo "1) boot partition"
	echo "2) system partition"
	echo "3) folder to be mounted"
	echo "4) root subvolume"
	echo "5) var subvolume"
	echo
	echo "Example:"
	echo "./mount /dev/sda1 /dev/sda3 /mnt/system /@ /var/@main"
	exit 1
fi

SSD_options="noatime,compress=zstd,commit=120"

mount -v "$2" -o $SSD_options,subvol="$4" "$3"
cd "$3" || exit
pwd

if [ ! -d "btr_pool" ]; then
	CREATE_DIRS=true
	mkdir -v btr_pool
fi

mount -v "$2" -o $SSD_options,subvol=/ btr_pool

SUBVOL="btr_pool/$4"
SUBVOL_VAR="btr_pool/$5"

if [[ ! -d "$SUBVOL" ]]; then
	echo "Subvolume $SUBVOL does not exist"
	umount -v btr_pool
	rmdir -v btr_pool
	cd - || exit
	umount -vR "$3"
	exit 1
fi

if [[ ! -d "$SUBVOL_VAR" ]]; then
	echo "Subvolume $SUBVOL_VAR does not exist"
	umount -v btr_pool
	rmdir -v btr_pool
	cd - || exit
	umount -vR "$3"
	exit 1
fi

if [ "$CREATE_DIRS" = true ]; then
	mkdir -v {boot,home,root,var}
fi

mount -v "$1" boot
mount -v "$2" -o $SSD_options,subvol=@home home

if [ "$CREATE_DIRS" = true ]; then
	mkdir -v -p home/jayson/{.cache,.var,.local,Downloads,Games}
	mkdir -v home/jayson/.var/app
	mkdir -v -p home/jayson/.local/share/Steam
fi

mount -v "$2" -o $SSD_options,subvol=@games home/jayson/Games
mount -v "$2" -o $SSD_options,subvol=@steam home/jayson/.local/share/Steam
mount -v "$2" -o $SSD_options,subvol=@flatpak_home home/jayson/.var/app

if [ "$CREATE_DIRS" = true ]; then
	mkdir -v btr_pool/@bkp_off/{downloads,cache_home}
	mkdir -v btr_pool/@bkp_off/{cache,tmp,downloads_root,cache_root}
fi

mount -v --bind btr_pool/@bkp_off/downloads home/jayson/Downloads
mount -v --bind btr_pool/@bkp_off/cache_home home/jayson/.cache

mount -v "$2" -o $SSD_options,subvol="$5" var

if [ "$CREATE_DIRS" = true ]; then
	mkdir -v var/{cache,tmp,lib,snap}
	mkdir -v var/lib/{flatpak,portables,machines}
fi

mount -v "$2" -o $SSD_options,subvol=@snap var/snap
mount -v "$2" -o $SSD_options,subvol=@flatpak var/lib/flatpak
mount -v "$2" -o $SSD_options,subvol=/var/@portables var/lib/portables
mount -v "$2" -o $SSD_options,subvol=/var/@machines var/lib/machines

mount -v --bind btr_pool/@bkp_off/cache var/cache
mount -v --bind btr_pool/@bkp_off/tmp var/tmp

mount -v "$2" -o $SSD_options,subvol=@root_user root

if [ "$CREATE_DIRS" = true ]; then
	mkdir -v root/{.cache,Downloads}
fi

mount -v --bind btr_pool/@bkp_off/downloads_root root/Downloads
mount -v --bind btr_pool/@bkp_off/cache_root root/.cache

cd ~ || exit

findmnt -Rt btrfs,ext4,vfat,overlay "$3"